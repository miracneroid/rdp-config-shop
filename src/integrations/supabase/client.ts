
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://mbvsottvfclwoswykxfy.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1idnNvdHR2ZmNsd29zd3lreGZ5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ0MzA0NTIsImV4cCI6MjA2MDAwNjQ1Mn0.FylA99zKt2mE2-GJ1AyKSlE5lG04S43T6XZK_gFGqUw";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: localStorage,
    detectSessionInUrl: true,
    flowType: 'pkce',
    onAuthStateChange: (event, session) => {
      if (event === 'SIGNED_IN' && session?.user?.email) {
        const email = session.user.email;
        // Check if user is admin
        if (email === 'admin@example.com' || email === 'test@gmail.com') {
          localStorage.setItem('isAdmin', 'true');
        } else {
          localStorage.removeItem('isAdmin');
        }
      } else if (event === 'SIGNED_OUT') {
        localStorage.removeItem('isAdmin');
      }
    }
  }
});

// Helper function to check if the current user is an admin
export const isUserAdmin = async (): Promise<boolean> => {
  // First check localStorage for quick access
  const storedIsAdmin = localStorage.getItem('isAdmin');
  if (storedIsAdmin === 'true') return true;
  
  // If not in localStorage, check with Supabase
  const { data: { user } } = await supabase.auth.getUser();
  if (!user) return false;
  
  const email = user.email;
  if (!email) return false;
  
  const isAdmin = email === 'admin@example.com' || email === 'test@gmail.com';
  
  // Update localStorage for future quick access
  if (isAdmin) {
    localStorage.setItem('isAdmin', 'true');
  }
  
  return isAdmin;
};
